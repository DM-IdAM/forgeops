#!/bin/bash

getsec () {
    kubectl get secret $1 -o jsonpath="{.data.$2}" | base64 --decode
}

amadmin_password () {
    echo "$(getsec am-env-secrets AM_PASSWORDS_AMADMIN_CLEAR) (amadmin user)"
}

profile_passwords () {
    echo ""
}

openidm_admin_password () {
    echo "$(getsec idm-env-secrets OPENIDM_ADMIN_PASSWORD) (openidm-admin user)"
}

6.5_directory_manager_password () {
    echo "$(getsec ds dirmanager\\.pw) (cn=Directory Manager user)"
}

7.0_directory_manager_password () {
    echo "$(getsec ds-passwords dirmanager\\.pw) (uid=admin user)"
}

setup_profile_service_account_passwords () {
    echo "$(getsec amster-env-secrets CFGUSR_PASS) (Configuration store service account (uid=am-config,ou=admins,ou=am-config))"
    echo "$(getsec amster-env-secrets CTSUSR_PASS) (CTS profile service account (uid=openam_cts,ou=admins,ou=famrecords,ou=openam-session,ou=tokens))"
    echo "$(getsec amster-env-secrets USRUSR_PASS) (Identity repository service account (uid=am-identity-bind-account,ou=admins,ou=identities))"
}

backup_restore_info () {
    echo ""
    echo "To back up all the generated secrets:"
    echo ""
    echo "  kubectl get secret -lsecrettype=forgeops-generated -o yaml > secrets.yaml"
    echo ""
    echo "To restore the backed up secrets:"
    echo ""
    echo "  kubectl apply -f secrets.yaml"
    echo ""
}

case $1 in

    "6.5")
        echo ""
        echo "Administrator passwords:"
        echo ""
        amadmin_password
        openidm_admin_password
        6.5_directory_manager_password
        echo ""
        echo "Passwords for service accounts generated by setup profiles:"
        echo ""
        setup_profile_service_account_passwords
        backup_restore_info
    ;;

    "7.0")
        echo ""
        echo "Administrator passwords:"
        echo ""
        amadmin_password
        7.0_directory_manager_password
        echo ""
        echo "Passwords for service accounts generated by setup profiles:"
        echo ""
        setup_profile_service_account_passwords
        backup_restore_info
    ;;

    *)
        echo "NOTE: You must run this script with a version number:"
        echo "./printSecrets.sh 6.5"
        echo "or"
        echo "./printSecrets.sh 7.0"
        exit 1;
    ;;
esac

