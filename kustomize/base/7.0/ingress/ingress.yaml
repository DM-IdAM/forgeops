# When K8S is upgraded to >= 1.14 - change the apiVersion to:
#apiVersion: networking.k8s.io/v1beta1
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    haproxy.router.openshift.io/cookie_name: route
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/session-cookie-hash: sha1
    nginx.ingress.kubernetes.io/session-cookie-name: route
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # CORS is now set in the AM and IDM configurations
    nginx.ingress.kubernetes.io/enable-cors: "false"
    cert-manager.io/cluster-issuer: "default-issuer"
    #cert-manager.io/cluster-issuer: "ca-issuer"
    nginx.ingress.kubernetes.io/body-size: "64m"
    nginx.ingress.kubernetes.io/send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-body-size: "64m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
  name: forgerock
spec:
  rules:
  - host: $(NAMESPACE).$(SUBDOMAIN).$(DOMAIN)
    http:
      paths:
      - backend:
          serviceName: am
          servicePort: 80
        path: /am
      - backend:
          serviceName: idm
          servicePort: 80
        path: /openidm
      - backend:
          serviceName: idm
          servicePort: 80
        path: /upload
      - backend:
          serviceName: idm
          servicePort: 80
        path: /export
      - backend:
          serviceName: idm
          servicePort: 80
        path: /admin
      - backend:
          serviceName: idm
          servicePort: 80
        path: /openicf
      # end user UI currently has its own ingress. Needs to rewrite the url path...
      # - backend:
      #     serviceName: end-user-ui
      #     servicePort: 80
      #   path: /enduser-ui
      # IG currently has its own ingress. Needs to rewrite the url path...
      # - backend:
      #    serviceName: ig
      #    servicePort: 80
      #  path: /ig
  tls:
  - hosts:
    - $(NAMESPACE).$(SUBDOMAIN).$(DOMAIN)
    secretName: sslcert
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: end-user-ui
  annotations:
    cert-manager.io/cluster-issuer: "default-issuer"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/configuration-snippet: |
      rewrite ^(/enduser)$ $1/ redirect;
spec:
  rules:
  - host: $(NAMESPACE).$(SUBDOMAIN).$(DOMAIN)
    http:
      paths:
      - backend:
          serviceName: end-user-ui
          servicePort: 8080
        path: /enduser/?(.*)
  tls:
  - hosts:
    - $(NAMESPACE).$(SUBDOMAIN).$(DOMAIN)
    secretName: sslcert
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: login-ui
  annotations:
    cert-manager.io/cluster-issuer: "default-issuer"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/configuration-snippet: |
      rewrite ^(/login)$ $1/ redirect;
      rewrite ^(/am/XUI)$ $1/ redirect;
spec:
  rules:
  - host: $(NAMESPACE).$(SUBDOMAIN).$(DOMAIN)
    http:
      paths:
      - backend:
          serviceName: login-ui
          servicePort: 8080
        path: /login/?(.*)
      - backend:
          serviceName: login-ui
          servicePort: 8080
        path: /am/XUI/?(.*)
  tls:
  - hosts:
    - $(NAMESPACE).$(SUBDOMAIN).$(DOMAIN)
    secretName: sslcert
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: platform-ui
  annotations:
    cert-manager.io/cluster-issuer: "default-issuer"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/configuration-snippet: |
      rewrite ^(/platform)$ $1/ redirect;
spec:
  rules:
  - host: $(NAMESPACE).$(SUBDOMAIN).$(DOMAIN)
    http:
      paths:
      - backend:
          serviceName: admin-ui
          servicePort: 8080
        path: /platform/?(.*)
  tls:
  - hosts:
    - $(NAMESPACE).$(SUBDOMAIN).$(DOMAIN)
    secretName: sslcert
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: web
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rewrite-target: "/$2"
    cert-manager.io/cluster-issuer: "default-issuer"

spec:
  tls:
  - hosts:
    - $(NAMESPACE).$(SUBDOMAIN).$(DOMAIN)
    secretName: sslcert
  rules:
  - host: $(NAMESPACE).$(SUBDOMAIN).$(DOMAIN)
    http:
      paths:
      - backend:
          serviceName: web
          servicePort: 8080
        path: /web
      - backend:
          serviceName: ig
          servicePort: 8080
        path: /ig(/|$)(.*)
